$date
	Thu Feb 27 14:44:23 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testcla $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$var reg 1 & clk $end
$var reg 8 ' o [7:0] $end
$var reg 1 ( rst $end
$scope module dut $end
$var wire 4 ) a [3:0] $end
$var wire 4 * b [3:0] $end
$var wire 1 % cin $end
$var wire 1 " cout $end
$var wire 1 + g0 $end
$var wire 1 , g1 $end
$var wire 1 - g2 $end
$var wire 1 . g3 $end
$var wire 1 / p0 $end
$var wire 1 0 p1 $end
$var wire 1 1 p2 $end
$var wire 1 2 p3 $end
$var wire 4 3 sum [3:0] $end
$var wire 1 4 c4 $end
$var wire 1 5 c3 $end
$var wire 1 6 c2 $end
$var wire 1 7 c1 $end
$scope module cg $end
$var wire 1 8 c0 $end
$var wire 1 7 c1 $end
$var wire 1 6 c2 $end
$var wire 1 5 c3 $end
$var wire 1 4 c4 $end
$var wire 1 % cin $end
$var wire 1 + g0 $end
$var wire 1 , g1 $end
$var wire 1 - g2 $end
$var wire 1 . g3 $end
$var wire 1 / p0 $end
$var wire 1 0 p1 $end
$var wire 1 1 p2 $end
$var wire 1 2 p3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x8
x7
x6
x5
x4
bx 3
x2
x1
x0
x/
x.
x-
x,
x+
bx *
bx )
1(
bx '
0&
x%
bx $
bx #
x"
bx !
$end
#10
b0 '
1&
#20
0&
0(
#30
b1 '
05
0"
04
06
17
b110 !
b110 3
0+
0,
0-
0.
1/
00
11
02
18
1%
b1 $
b1 *
b100 #
b100 )
1&
#40
0&
#50
b10 '
1"
14
15
16
b1 !
b1 3
12
1+
0/
10
b1101 $
b1101 *
b11 #
b11 )
1&
#60
0&
#70
b11 '
0"
04
b1000 !
b1000 3
0+
1/
02
b10 $
b10 *
b101 #
b101 )
1&
#80
0&
#90
b100 '
1"
14
b100 !
b100 3
1-
01
12
b110 $
b110 *
b1101 #
b1101 )
1&
#100
0&
#110
b101 '
06
b1010 !
b1010 3
1.
00
02
b1100 $
b1100 *
1&
#120
0&
#130
b110 '
0"
04
07
0.
10
b1011 !
b1011 3
08
0%
b101 $
b101 *
b110 #
b110 )
1&
#140
0&
